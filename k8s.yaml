---
apiVersion: v1
kind: ConfigMap
metadata:
  name: s3-storage-config
data:
  URL: 'https://ams3.digitaloceanspaces.com'
  BUCKET: '__S3_BUCKET_NAME__'
  MOUNTPOINT: '/s3-storage'
  ALLOW_EMPTY: '1'
  ALLOW_OTHERS: '1'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: __IMAGE_NAME__
spec:
  replicas: 1
  selector:
    matchLabels:
      app: __IMAGE_NAME__
  template:
    metadata:
      labels:
        app: __IMAGE_NAME__
    spec:
      containers:
      - name: __IMAGE_NAME__
        image: __REGISTRY_FQDN__/__IMAGE_VENDOR__/__IMAGE_NAME__:__IMAGE_TAG__
        imagePullPolicy: Always
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
        env:
          - name: BLOB_STORAGE_URL
            value: "file://./storage"
            #value: "s3://__S3_BUCKET_NAME__?region=ams3&endpoint=ams3.digitaloceanspaces.com&s3ForcePathStyle=true"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: s3-storage
          mountPath: /app/storage
          mountPropagation: HostToContainer
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3

      - name: __IMAGE_NAME__-storage
        image: signaleleven/s3fs-sidecar:latest
        imagePullPolicy: Always
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
        env:
        - name: AWSACCESSKEYID
          valueFrom:
            secretKeyRef:
              name: s3-credentials
              key: access-key
        - name: AWSSECRETACCESSKEY
          valueFrom:
            secretKeyRef:
              name: s3-credentials
              key: secret-key
        - name: BUCKET
          valueFrom:
            configMapKeyRef:
              name: s3-storage-config
              key: BUCKET
        - name: MOUNTPOINT
          valueFrom:
            configMapKeyRef:
              name: s3-storage-config
              key: MOUNTPOINT
        - name: S3URL
          valueFrom:
            configMapKeyRef:
              name: s3-storage-config
              key: URL
        - name: ALLOWEMPTY
          valueFrom:
            configMapKeyRef:
              name: s3-storage-config
              key: ALLOW_EMPTY   
        - name: ALLOWOTHERS
          valueFrom:
            configMapKeyRef:
              name: s3-storage-config
              key: ALLOW_OTHERS             
        volumeMounts:
        - name: s3-storage
          mountPath: /s3-storage
          mountPropagation: Bidirectional
      volumes:
      - name: s3-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: __IMAGE_NAME__
spec:
  type: LoadBalancer
  selector:
    app: __IMAGE_NAME__
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: __IMAGE_NAME__-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: caddy
spec:
  rules:
  - host: __IMAGE_NAME__.__FRONT_DOMAIN__
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: __IMAGE_NAME__
            port:
              number: 80
