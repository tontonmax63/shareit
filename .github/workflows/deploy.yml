name: adobe-interview-pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_VENDOR: clockwork-registry
  IMAGE_NAME: sse-shareit
  IMAGE_TAG: latest
  REGISTRY_FQDN: registry.digitalocean.com
  REGISTRY_USERNAME: ${{ secrets.DO_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.DO_ACCESS_TOKEN }}
  K8S_CONFIG: ${{ secrets.K8S_CONF_FILE }}
  FRONT_DOMAIN: do-interview.cw.substance3d.io
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
  S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v2

    - name: set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22.5'

    - name: build docker image
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

    - name: log in to do container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY_FQDN }}
        username: ${{ env.REGISTRY_USERNAME }}
        password: ${{ env.REGISTRY_PASSWORD }}

    - name: store docker image in registry
      run: |
        docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.REGISTRY_FQDN }}/${{ env.IMAGE_VENDOR }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        docker push ${{ env.REGISTRY_FQDN }}/${{ env.IMAGE_VENDOR }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: create ~/.kube/config file
      run: |
        mkdir -p $HOME/.kube 2>/dev/null
        echo -e "${{ env.K8S_CONFIG }}" > $HOME/.kube/config

    - name: clone repository
      uses: actions/checkout@v3
      with:
        repository: 'tontonmax63/shareit'
        path: '.'

    - name: replace vars in k8s.yaml
      uses: falnyr/replace-env-vars-action@master
      env:
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
        IMAGE_VENDOR: ${{ env.IMAGE_VENDOR }}
        REGISTRY_FQDN: ${{ env.REGISTRY_FQDN }}
        FRONT_DOMAIN: ${{ env.FRONT_DOMAIN }}
        S3_BUCKET_NAME: ${{ env.S3_BUCKET_NAME }}
        S3_ACCESS_KEY: ${{ env.S3_ACCESS_KEY }}
        S3_SECRET_KEY: ${{ env.S3_SECRET_KEY }}
      with:
        filename: k8s.yaml

    - name: deploy pod
      run: |
        kubectl apply -f k8s.yaml

  validate:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: validate url https://${{ env.IMAGE_NAME }}${{ env.FRONT_DOMAIN }}
      run: |
        r=$(curl --write-out '%{http_code}' --silent --output /dev/null https://${{ env.IMAGE_NAME }}.${{ env.FRONT_DOMAIN }})
        if [ $r -ne 200 ]; then
          exit 1
        fi
