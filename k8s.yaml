apiVersion: v1
kind: Secret
metadata:
  name: s3-credentials
  namespace: default
type: Opaque
data:
  accessKeyID: __S3_ACCESS_KEY_B64__
  secretAccessKey: __S3_SECRET_KEY_B64__
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: __IMAGE_NAME__
spec:
  replicas: 1
  selector:
    matchLabels:
      app: __IMAGE_NAME__
  template:
    metadata:
      labels:
        app: __IMAGE_NAME__
    spec:
      containers:
      - name: __IMAGE_NAME__
        image: __REGISTRY_FQDN__/__IMAGE_VENDOR__/__IMAGE_NAME__:__IMAGE_TAG__
        env:
          - name: BLOB_STORAGE_URL
            value: "file://./storage"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: s3-storage
          mountPath: /app/storage
      volumes:
      - name: s3-storage
        csi:
          driver: ru.yandex.s3.csi
          volumeAttributes:
            bucket: __S3_BUCKET_NAME__
            region: ams3
            endpoint: https://ams3.digitaloceanspaces.com
          nodePublishSecretRef:
            name: s3-credentials
---
apiVersion: v1
kind: Service
metadata:
  name: __IMAGE_NAME__
spec:
  type: LoadBalancer
  selector:
    app: __IMAGE_NAME__
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: __IMAGE_NAME__-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: caddy
spec:
  rules:
  - host: __IMAGE_NAME__.__FRONT_DOMAIN__
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: __IMAGE_NAME__
            port:
              number: 80
