---
apiVersion: v1
kind: Secret
metadata:
  name: s3fs-passwd
type: Opaque
data:
  passwd-s3fs: __S3_CREDENTIALS__
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: __IMAGE_NAME__
spec:
  replicas: 1
  selector:
    matchLabels:
      app: __IMAGE_NAME__
  template:
    metadata:
      labels:
        app: __IMAGE_NAME__
    spec:
      containers:
      - name: __IMAGE_NAME__
        image: __REGISTRY_FQDN__/__IMAGE_VENDOR__/__IMAGE_NAME__:__IMAGE_TAG__
        env:
          - name: BLOB_STORAGE_URL
            value: "file:///mnt/s3"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: s3-storage
          mountPath: /mnt/s3
      initContainers:
      - name: __IMAGE_NAME__-storage
        image: busybox:stable-musl
        command: ['sh', '-c', "apk add --no-cache s3fs && echo '__S3_ACCESS_KEY__:__S3_SECRET_KEY__'>/etc/passwd-s3fs && chmod 640 /etc/passwd-s3fs && s3fs __S3_BUCKET_NAME__ /mnt/s3 -o url=https://nyc3.digitaloceanspaces.com -o use_path_request_style -o allow_other -o passwd_file=/etc/passwd-s3fs"]
        volumeMounts:
        - name: s3-storage
          mountPath: /mnt/s3
        #- name: s3fs-passwd
        #  mountPath: /etc/passwd-s3fs
      volumes:
      - name: s3-storage
        emptyDir: {}
      #- name: s3fs-passwd
      #  secret:
      #    secretName: s3fs-passwd
---
apiVersion: v1
kind: Service
metadata:
  name: __IMAGE_NAME__
spec:
  type: LoadBalancer
  selector:
    app: __IMAGE_NAME__
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: __IMAGE_NAME__-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: caddy
spec:
  rules:
  - host: __IMAGE_NAME__.__FRONT_DOMAIN__
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: __IMAGE_NAME__
            port:
              number: 80
